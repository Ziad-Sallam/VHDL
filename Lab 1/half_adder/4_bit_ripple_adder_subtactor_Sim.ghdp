Component RibbleAdder_tb()
{
    SIGNAL finished : STD_LOGIC:= '0';
    CONSTANT period_time : TIME := 83333 ps;

    Process Sim_finished()
    {
        wait for 100000 us;
        finished <= '1';
        wait;
    }

    NewComponent RibbleAdder
    (
        A0 => A0,
        A1 => A1,
        A2 => A2,
        A3 => A3,
        B0 => B0,
        B1 => B1,
        B2 => B2,
        B3 => B3,
        cntrl => cntrl,
        c0 => c0,
        c1 => c1,
        c2 => c2,
        c3 => c3,
        carry => carry,
    );

    SIGNAL A0 : std_logic ;
    SIGNAL A1 : std_logic ;
    SIGNAL A2 : std_logic ;
    SIGNAL A3 : std_logic ;
    SIGNAL B0 : std_logic ;
    SIGNAL B1 : std_logic ;
    SIGNAL B2 : std_logic ;
    SIGNAL B3 : std_logic ;
    SIGNAL cntrl : std_logic ;
    SIGNAL c0 : std_logic ;
    SIGNAL c1 : std_logic ;
    SIGNAL c2 : std_logic ;
    SIGNAL c3 : std_logic ;
    SIGNAL carry : std_logic ;


    Process Sim_A0()
    {
        While(finished /= '1')
        {
            wait;
        }
        wait;
    }

    Process Sim_A1()
    {
        While(finished /= '1')
        {
            wait;
        }
        wait;
    }

    Process Sim_A2()
    {
        While(finished /= '1')
        {
            wait;
        }
        wait;
    }

    Process Sim_A3()
    {
        While(finished /= '1')
        {
            wait;
        }
        wait;
    }

    Process Sim_B0()
    {
        While(finished /= '1')
        {
            wait;
        }
        wait;
    }

    Process Sim_B1()
    {
        While(finished /= '1')
        {
            wait;
        }
        wait;
    }

    Process Sim_B2()
    {
        While(finished /= '1')
        {
            wait;
        }
        wait;
    }

    Process Sim_B3()
    {
        While(finished /= '1')
        {
            wait;
        }
        wait;
    }

    Process Sim_cntrl()
    {
        While(finished /= '1')
        {
            wait;
        }
        wait;
    }
}